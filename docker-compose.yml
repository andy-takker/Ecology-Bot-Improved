version: '3.0'

services:
  db:
    container_name: 'bot_postgres'
    image: 'postgres:13'
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}

  redis:
    container_name: 'bot_redis'
    image: redis
    restart: always
    command: "redis-server --requirepass ${REDIS_PASSWORD:-password}"
    ports:
      - "${REDIS_PORT:-6379}:6379"

  admin:
    container_name: 'bot_admin'
    restart: on-failure
    image: bot
    command: gunicorn -c ecology_bot/admin/gunicorn_conf.py ecology_bot.admin.wsgi:app
    environment:
      DEBUG: ${DEBUG}

      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}

      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-password}

      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-token}
      TELEGRAM_BOT_ADMINS: ${TELEGRAM_BOT_ADMINS:-[1,2]}

      SECRET_KEY: ${SECRET_KEY:-secret_key}

  nginx:
    container_name: 'bot_nginx'
    restart: always
    build: ./docker/nginx
    ports:
      - "1337:80"
    depends_on:
      - admin
  bot:
    container_name: 'bot'
    image: bot
    depends_on:
      - db
      - redis
      - worker
    command: python ecology_bot/bot/main.py
    restart: on-failure
    build:
      context: .
      dockerfile: docker/bot/Dockerfile
    environment:
      DEBUG: ${DEBUG:-False}

      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}

      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-password}

      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-token}
      TELEGRAM_BOT_ADMINS: ${TELEGRAM_BOT_ADMINS:-[1,2]}

      PYTHONPATH: "/bot"

  worker:
    container_name: 'bot_worker'
    image: bot
    depends_on:
      - db
      - redis
    command: celery -A ecology_bot.workers.celery worker -l INFO
    restart: on-failure
    environment:
      DEBUG: ${DEBUG}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}

      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-password}

      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-token}
      TELEGRAM_BOT_ADMINS: ${TELEGRAM_BOT_ADMINS:-[1,2]}

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

